Разработать программу, которая генерируюет 100 пар чисел длиной в 20-30 разрядов, и вычисляет наибольший общий делитель (НОД) с помощью алгоритма Евклида и бинарного алгоритма, (пример такой пары: 49262947254738345234 и 25117958363234435239). Длина двух чисел в паре должна быть одинакова. 


Алгоритм Евклида:
в прикрепленном документе

Бинарный алгоритм:
На входе подаются два нечетных числа A и B, A > B.
Вычисляется  C = (A - B)/2  
Проверяем, является ли C нечетным, иначе, сокращает его на 2, пока C не станет нечeтным.
Формируем новую пару (B,C). Проверяем условие B > C. Если оно не выполнено и C>B, то меняем местами B и C.
Переходим к новой итерации.
Пример и условие выхода из цикла во втором прикрепленном документе

Использовать библиотеки для работы с длинной арифметикой нельзя.

Результаты вывести в файл в следующем виде:
Способ вычисления: алгоритм Евклида
1. <Число1> <Число2> <НОД>
2. <Число1> <Число2> <НОД>
3. <Число1> <Число2> <НОД>
.
.
.
100. <Число1> <Число2> <НОД>

Способ вычисления: бинарный алгоритм 
1. <Число1> <Число2> <НОД>
2. <Число1> <Число2> <НОД>
3. <Число1> <Число2> <НОД>
.
.
.
100. <Число1> <Число2> <НОД>

Общее время, затраченное алгоритмом Евклида: 22.2 секунды
Общее время, затраченное бинарным алгоритмом: 11.1 секунды